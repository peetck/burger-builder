{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","connect","state","orders","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","useEffect","Spinner","id","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sFCsCXC,EAnCD,SAACC,GACb,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GAAD,OACvC,0BACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEXC,IAAKP,EAAGJ,MAEPI,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,QAcF,OACE,yBAAKW,UAAWC,IAAQC,OACtB,2CAAiBZ,GACjB,qCACS,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,+BCYpDC,uBAhBS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAMzB,MAAM0B,OACpBC,QAASF,EAAMzB,MAAM2B,QACrBC,MAAOH,EAAMI,KAAKD,MAClBE,OAAQL,EAAMI,KAAKC,WAII,SAACC,GAC1B,MAAO,CACLC,cAAe,SAACJ,EAAOE,GAAR,OACbC,EAASE,IAAoBL,EAAOE,QAI3BN,CAGbU,aAvCa,SAACjC,GAAW,IACjB+B,EAAiC/B,EAAjC+B,cAAeJ,EAAkB3B,EAAlB2B,MAAOE,EAAW7B,EAAX6B,OAE9BK,qBAAU,WACRH,EAAcJ,EAAOE,KACpB,CAACE,EAAeJ,EAAOE,IAE1B,IAAIJ,EAAS,kBAACU,EAAA,EAAD,MAUb,OATKnC,EAAM0B,UACTD,EAASzB,EAAMyB,OAAOlB,KAAI,SAACR,GAAD,OACxB,kBAACmB,EAAD,CACEH,IAAKhB,EAAMqC,GACXnC,YAAaF,EAAME,YACnBoB,OAAQtB,EAAMsB,YAIb,6BAAMI,KAsBYY","file":"static/js/5.40b1f957.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1j406\"};","import React from \"react\";\r\n\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst order = (props) => {\r\n  const ingredients = [];\r\n\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ig) => (\r\n    <span\r\n      style={{\r\n        textTransform: \"capitalize\",\r\n        display: \"inline-block\",\r\n        margin: \"0 8px\",\r\n        border: \"1px solid #ccc\",\r\n        padding: \"5px\",\r\n      }}\r\n      key={ig.name}\r\n    >\r\n      {ig.name} ({ig.amount})\r\n    </span>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nconst Orders = (props) => {\r\n  const { onFetchOrders, token, userId } = props;\r\n\r\n  useEffect(() => {\r\n    onFetchOrders(token, userId);\r\n  }, [onFetchOrders, token, userId]);\r\n\r\n  let orders = <Spinner />;\r\n  if (!props.loading) {\r\n    orders = props.orders.map((order) => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={+order.price}\r\n      />\r\n    ));\r\n  }\r\n  return <div>{orders}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchOrders: (token, userId) =>\r\n      dispatch(actions.fetchOrders(token, userId)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}